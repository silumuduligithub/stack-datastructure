class Solution {
    public double[] getCollisionTimes(int[][] cars) {
        double[] ans = new double[cars.length];
        // Arrays.fill(ans, -1.0);
        Stack<Integer> st = new Stack<>();
        for(int i = cars.length - 1; i >= 0; i--){
            ans[i] = -1.0;
            int p1 = cars[i][0];// position of first car
            int s1 = cars[i][1];// speed of first car
            while(st.size() > 0){
                int colsestIdx = st.peek();
                int p2 = cars[colsestIdx][0];// positon of the first car
                int s2 = cars[colsestIdx][1];// spped of the second car
                double time = (p2 - p1)/((s1 - s2)*1.0);
                if(s1 <= s2 || (time >= ans[colsestIdx] && ans[colsestIdx] > -1))st.pop();
                else break;
            }
            if(st.size() > 0){
                int colsestIdx = st.peek();
                int p2 = cars[colsestIdx][0];
                int s2 = cars[colsestIdx][1];
                double time = (p2 - p1)/((s1 - s2)*1.0);
                ans[i] = time;
            }
            st.push(i);
        }
        return ans;
    }
}
